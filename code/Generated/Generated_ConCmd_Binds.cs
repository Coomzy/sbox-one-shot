// This class is auto generated by GenerateBindConCmds::Generate_bind_ConCmds()
public static class ConCmd_Binds
{
	[ConCmd("resetbinds")]
	public static void resetbinds()
	{
		IGameInstance.Current.ResetBinds();
		IGameInstance.Current.SaveBinds();
	}

	[ConCmd("dumpbinds")]
	public static void dumpbinds()
	{
		foreach (var action in Input.GetActions())
		{
		string boundButtonName = IGameInstance.Current.GetBind(action.Name, out bool isDefault, out bool isCommon);
		Log.Info($"The '{action.Name}' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
	}

	[ConCmd("bind_Forward")]
	public static void bind_Forward(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Forward", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Forward' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Forward", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Backward")]
	public static void bind_Backward(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Backward", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Backward' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Backward", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Left")]
	public static void bind_Left(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Left", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Left' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Left", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Right")]
	public static void bind_Right(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Right", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Right' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Right", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Jump")]
	public static void bind_Jump(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Jump", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Jump' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Jump", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Run")]
	public static void bind_Run(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Run", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Run' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Run", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Walk")]
	public static void bind_Walk(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Walk", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Walk' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Walk", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Duck")]
	public static void bind_Duck(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Duck", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Duck' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Duck", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_attack1")]
	public static void bind_attack1(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("attack1", out bool isDefault, out bool isCommon);
			Log.Info($"The 'attack1' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("attack1", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_attack2")]
	public static void bind_attack2(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("attack2", out bool isDefault, out bool isCommon);
			Log.Info($"The 'attack2' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("attack2", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_debug")]
	public static void bind_debug(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("debug", out bool isDefault, out bool isCommon);
			Log.Info($"The 'debug' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("debug", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Voice")]
	public static void bind_Voice(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Voice", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Voice' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Voice", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Drop")]
	public static void bind_Drop(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Drop", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Drop' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Drop", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Score")]
	public static void bind_Score(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Score", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Score' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Score", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Menu")]
	public static void bind_Menu(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Menu", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Menu' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Menu", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Chat")]
	public static void bind_Chat(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Chat", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Chat' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Chat", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Duck_Alt")]
	public static void bind_Duck_Alt(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Duck_Alt", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Duck_Alt' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Duck_Alt", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_sbux_menu")]
	public static void bind_sbux_menu(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("sbux_menu", out bool isDefault, out bool isCommon);
			Log.Info($"The 'sbux_menu' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("sbux_menu", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}

	[ConCmd("bind_Spray")]
	public static void bind_Spray(string buttonName = null)
	{
		if (string.IsNullOrWhiteSpace(buttonName))
		{
			string boundButtonName = IGameInstance.Current.GetBind("Spray", out bool isDefault, out bool isCommon);
			Log.Info($"The 'Spray' action is bound to '{boundButtonName}'{(isDefault ? " (Default binding)" : "")}{(isCommon ? " (Common binding)" : "")}");
		}
		else
		{
			IGameInstance.Current.SetBind("Spray", buttonName);
			IGameInstance.Current.SaveBinds();
		}
	}
}
